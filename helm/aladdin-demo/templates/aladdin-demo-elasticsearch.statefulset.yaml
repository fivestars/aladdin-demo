{{ if .Values.elasticsearch.create }}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: db
  labels:
    project: {{ .Chart.Name }}
    name: {{ .Chart.Name }}-elasticsearch
    app: {{ .Chart.Name }}-elasticsearch
    githash: {{.Values.deploy.imageTag}}
spec:
  selector:
    matchLabels:
      name: {{ .Chart.Name }}-elasticsearch
  # The name of the service that governs this StatefulSet, must exist before the StatefulSet    
  serviceName: {{ .Chart.Name }}-elasticsearch
  replicas: 1
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}-elasticsearch # has to match .spec.selector.matchLabels
    spec:
      initContainers:
      # Increase the vm.max_map_count to satisfy the bootstrap checks of elasticsearch
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      # Change the owner of the mounted persistent volume let elasticsearch access it for data and logs
      # 1000 is the uid of the first non-root user created, in our case that is the elasticsearch user
      # Ideally this can be done with spec.securityContext, which is commented out below, but it 
      # does not appear to work in minikube
      - name: volume-mount-hack
        image: busybox
        command: ["sh", "-c", "chown -R {{ .Values.elasticsearch.id }}:{{ .Values.elasticsearch.id }} /stateful"]
        volumeMounts:
        - name: storage
          mountPath: /stateful
      terminationGracePeriodSeconds: 10
      containers:
      - name: {{ .Chart.Name }}-elasticsearch
        image: {{ .Values.deploy.ecr }}{{ .Chart.Name }}-elasticsearch:{{ .Values.deploy.imageTag }}
        ports:
        - containerPort: {{ .Values.elasticsearch.containerPort }}
        volumeMounts:
        - name: {{ .Chart.Name }}-elasticsearch
          # Volume mounts will override the mountPath, which in this case has a lot of other useful
          # things in it, we only want to mount elasticsearch.yml 
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          # Configmaps are lists of key-value pairs, and we only need one of the keys, so we
          # specify that with a subpath 
          subPath: elasticsearch.yml
        - name: storage
          mountPath: /usr/share/elasticsearch/stateful
      volumes:
        - name: {{ .Chart.Name }}-elasticsearch
          configMap:
            name: {{ .Chart.Name }}-elasticsearch
      # We need to modify the security context for the pod so that the volumes mounted under the elasticsearch
      # user instead of the default root user, allowing elasticsearch to access the persistent volume
      # This does not currently work with minikube, hence the volume-mount-hack initContainer above
      # securityContext: 
      #   fsGroup: 1000
  # Define the persistent volume claim, which will dynamically allocate a peristent volume that
  # satisfies this template
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      # Allow one node to read and write at a time
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi
{{ end }}
