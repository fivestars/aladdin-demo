apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    project: {{ .Chart.Name }}
    name: {{ .Chart.Name }}
    app: {{ .Chart.Name }}
    githash: {{.Values.deploy.imageTag}}
spec:
  replicas: {{.Values.deploy.replicas}}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        project: {{ .Chart.Name }}
        name: {{ .Chart.Name }}
        app: {{ .Chart.Name }}
    spec:
      # Number of seconds for the containers to perform a graceful shutdown,
      # after which it is voilently terminated. This defaults to 30s, most apps may not need to change it
      terminationGracePeriodSeconds: {{ .Values.deploy.terminationGracePeriod }}
      # This is needed when pulling from our ecr repo
      imagePullSecrets:
        - name: aws
      containers:
############# aladdin-demo app container ####
## This is a container that runs the falcon aladdin-demo app with uwsgi server
#############################################
      - name: {{ .Chart.Name }}
        # Docker image for this container
        image: {{ .Values.deploy.ecr }}{{ .Chart.Name }}:{{ .Values.deploy.imageTag }}
        workingDir: /home/{{ .Chart.Name}} 
        # Container port that is being exposed within the node
        ports:
        - containerPort: {{ .Values.app.port }}
          protocol: TCP
        # Mount the configuration file into the docker container
        volumeMounts:
          # Absolute path is used here
          - mountPath: /config/
            name: {{ .Chart.Name }}-uwsgi
        envFrom:
          # Load the data from configMap into the runtime environment
          # This allows us to use os.environ["KEY"] to look up variables
          - configMapRef:
              name: {{ .Chart.Name }}
        resources:
          requests:
            cpu: 100m
############# nginx server container ########
## This is a container for an nginx server
#############################################
{{ if .Values.app.nginx.use }}
      # nginx container, only gets created if the app.nginx.use field is true in values.yaml
      - name: {{ .Chart.Name }}-nginx
        image: nginx:1.12-alpine
        ports: 
          - containerPort: {{ .Values.app.nginx.port }}
            protocol: TCP
        volumeMounts:
          - mountPath: /etc/nginx/
            name: {{ .Chart.Name }}-nginx
          # mount html that should contain an index.html file written by the init container
          - mountPath: /usr/share/nginx/html
            name: workdir
        envFrom:
          - configMapRef:
              name: {{ .Chart.Name }}
        resources:
          requests:
            cpu: 100m
{{ end }}
############# init container ################
## initContainers must run and successfully exit before the pod can start. If it fails, K8s
## will restart the initContainers until it is successful. 
## You can have multiple initContainers, they will execute one by one in order
#############################################
      initContainers:
{{ if .Values.app.nginx.use }}
      # writes a short message into index.html into a mounted volume file shared by nginx
      # this will be the default page that shows up when sending get requests to nginx that
      # are not forwarded to uWSGI
      - name: install
        image: busybox
        command: ["sh", "-c", "printf '\n You have reached NGINX \n \n' > /work-dir/index.html"]
        volumeMounts:
        - name: workdir
          mountPath: "/work-dir"
{{ end }}
{{ if .Values.redis.create }}
        # initContainer that checks that redis contianer is up and running
{{ include "redis_check" . | indent 6 }}
        # initContainer that populates redis, only runs if the previous one terminates successfully
{{ include "redis_populate" . | indent 6 }}
{{ end }}
############# end of containers #############
      # Specify volumes that will be mounted in the containers
      volumes:
        - name: {{ .Chart.Name }}-nginx
          configMap:
            name: {{ .Chart.Name }}-nginx
        - name: {{ .Chart.Name }}-uwsgi
          configMap:
            name: {{ .Chart.Name }}-uwsgi
{{ if .Values.app.nginx.use }}
        - name: workdir 
          emptyDir: {}
{{ end }}
